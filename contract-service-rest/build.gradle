buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE')
        classpath('com.bmuschko:gradle-docker-plugin:3.6.2')
        classpath('gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.15.0')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-spring-boot-application'
apply plugin: "org.hidetake.swagger.generator"

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 10
targetCompatibility = 10

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('io.swagger:swagger-annotations:1.5.21')
    swaggerCodegen('io.swagger:swagger-codegen-cli:2.3.1')
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

docker {
    springBootApplication {
        baseImage = 'openjdk:11-slim'
        tag = 'contract-service-rest:latest'
        ports = [9000, 8081]
    }
}

swaggerSources {
    contracts {
        inputFile = file('src/main/resources/swagger/contract-service-rest-swagger.json')
        code {
            language = 'spring'
            configFile = file('src/main/resources/swagger/config.json')
            components = ['models', 'apis']
            dependsOn validation
            outputDir =file("${project.buildDir}")
        }
    }
}

compileJava.dependsOn swaggerSources.contracts.code
sourceSets {
    main {
        java {
            srcDir "${project.buildDir}/src/main/java"
        }
    }
}

//sourceSets.main.java.srcDir "${project.buildDir}/src/main/java"
//sourceSets.main.resources.srcDir "${project.buildDir}/src/main/resources"