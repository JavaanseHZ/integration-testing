buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE')
        classpath('com.bmuschko:gradle-docker-plugin:3.6.2')
        classpath 'no.nils:wsdl2java:0.10'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-spring-boot-application'
apply plugin: 'no.nils.wsdl2java'

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 10
targetCompatibility = 10

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile ('org.apache.cxf:cxf-spring-boot-starter-jaxws:3.2.7')


    compile('com.sun.xml.bind:jaxb-core:2.3.0')
    compile('com.sun.xml.bind:jaxb-impl:2.3.0')
    compile('javax.xml.bind:jaxb-api:2.3.1')
    compile('javax.xml.ws:jaxws-api:2.3.1')
    compile('javax.activation:activation:1.1.1')
    compile('javax.jws.jsr181-api:jsr181-api:2.1.1')
    compile('javax.annotation:javax.annotation-api:1.3.2')


    wsdl2java('com.sun.xml.bind:jaxb-core:2.3.0')
    wsdl2java('com.sun.xml.bind:jaxb-impl:2.3.0')

    wsdl2java('javax.xml.bind:jaxb-api:2.3.1')
    wsdl2java('javax.xml.ws:jaxws-api:2.3.1')
    wsdl2java('javax.activation:activation:1.1.1')
    wsdl2java('javax.jws.jsr181-api:jsr181-api:2.1.1')
    wsdl2java('javax.annotation:javax.annotation-api:1.3.2')
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

docker {
    springBootApplication {
        baseImage = 'openjdk:11-slim'
        tag = 'contract-service-soap:latest'
        ports = [9000, 8080]
    }
}

wsdl2javaExt {
    cxfVersion = "3.2.7"
    deleteGeneratedSourcesOnClean = true
}

wsdl2java {
    generatedWsdlDir = file("gen-src/src/main/java")
    wsdlDir = file("src/main/resources/wsdl")
    wsdlsToGenerate = [
        ['src/main/resources/wsdl/contract-service-soap.wsdl']
    ]
}
