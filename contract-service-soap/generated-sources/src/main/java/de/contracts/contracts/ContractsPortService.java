package de.contracts.contracts;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2018-11-10T21:04:22.805+01:00
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "ContractsPortService",
                  wsdlLocation = "file:src/main/resources/wsdl/contract-service.wsdl",
                  targetNamespace = "http://contracts.de/contracts")
public class ContractsPortService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://contracts.de/contracts", "ContractsPortService");
    public final static QName ContractsPortSoap = new QName("http://contracts.de/contracts", "ContractsPortSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/wsdl/contract-service.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ContractsPortService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:src/main/resources/wsdl/contract-service.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ContractsPortService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ContractsPortService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ContractsPortService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ContractsPortService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ContractsPortService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ContractsPortService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ContractsPort
     */
    @WebEndpoint(name = "ContractsPortSoap")
    public ContractsPort getContractsPortSoap() {
        return super.getPort(ContractsPortSoap, ContractsPort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ContractsPort
     */
    @WebEndpoint(name = "ContractsPortSoap")
    public ContractsPort getContractsPortSoap(WebServiceFeature... features) {
        return super.getPort(ContractsPortSoap, ContractsPort.class, features);
    }

}
