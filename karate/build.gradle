plugins {
//    id 'java'
    id 'scala'
}

sourceCompatibility = 10
targetCompatibility = 10

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    gatling
}

dependencies {
    testCompile('com.intuit.karate:karate-apache:0.8.0.1')
    testCompile('com.intuit.karate:karate-junit4:0.8.0.1')
    testCompile('net.masterthought:cucumber-reporting:4.2.1')
    gatling ('org.scala-lang:scala-library:2.12.7')
    gatling('com.intuit.karate:karate-gatling:0.8.0.1')
    gatling ('com.intuit.karate:karate-apache:0.8.0.1')
    gatling('com.intuit.karate:karate-junit4:0.8.0.1')
}

sourceSets {
    simulations {
        scala {
            srcDirs =['src/simulations/load']
        }
        resources {
            srcDirs =['src/simulations/resources']
        }
        compileClasspath += configurations.gatling
    }
    
    test {
        java {
            srcDir file('src/test/java')
        }
        resources {
            srcDir file('src/test/resources')
        }
    }
}

test {
    // Pull cucumber options into the cucumber JVM
    systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
    // Pull karate options into the JVM
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    // Ensure tests are always run
    outputs.upToDateWhen { false }
}

task gatlingRun(type: JavaExec) {
    description = 'Run gatling tests'
    new File("${buildDir}/reports/gatling").mkdirs()

    classpath = sourceSets.simulations.runtimeClasspath + configurations.gatling

    main = "io.gatling.app.Gatling"
    args = ['-s', 'contract.ContractKarateGatlingSimulation',
            '-sf', 'simulations/resources',
            '-df', 'simulations/resources',
            '-rf', "${buildDir}/reports/gatling"
    ]
}